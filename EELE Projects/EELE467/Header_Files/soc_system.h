#ifndef _ALTERA_SOC_SYSTEM_H_
#define _ALTERA_SOC_SYSTEM_H_

/*
 * This file was automatically generated by the swinfo2header utility.
 * 
 * Created from SOPC Builder system 'soc_system' in
 * file 'soc_system.sopcinfo'.
 */

/*
 * This file contains macros for all modules with masters in the system and
 * all the devices connected to those masters.
 * Macro names have unique prefixes to prevent duplicate names.
 */

/*
 * Macros for device 'onchip_memory', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps'.
 * The macros are prefixed with 'HPS_ONCHIP_MEMORY_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ONCHIP_MEMORY_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_ONCHIP_MEMORY_COMPONENT_NAME onchip_memory
#define HPS_ONCHIP_MEMORY_BASE 0x0
#define HPS_ONCHIP_MEMORY_SPAN 65536
#define HPS_ONCHIP_MEMORY_END 0xffff
#define HPS_ONCHIP_MEMORY_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_ONCHIP_MEMORY_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_ONCHIP_MEMORY_CONTENTS_INFO ""
#define HPS_ONCHIP_MEMORY_DUAL_PORT 0
#define HPS_ONCHIP_MEMORY_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_ONCHIP_MEMORY_INIT_CONTENTS_FILE soc_system_onchip_memory
#define HPS_ONCHIP_MEMORY_INIT_MEM_CONTENT 1
#define HPS_ONCHIP_MEMORY_INSTANCE_ID NONE
#define HPS_ONCHIP_MEMORY_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_ONCHIP_MEMORY_RAM_BLOCK_TYPE AUTO
#define HPS_ONCHIP_MEMORY_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_ONCHIP_MEMORY_SINGLE_CLOCK_OP 0
#define HPS_ONCHIP_MEMORY_SIZE_MULTIPLE 1
#define HPS_ONCHIP_MEMORY_SIZE_VALUE 65536
#define HPS_ONCHIP_MEMORY_WRITABLE 1
#define HPS_ONCHIP_MEMORY_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_ONCHIP_MEMORY_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_ONCHIP_MEMORY_MEMORY_INFO_GENERATE_HEX 1
#define HPS_ONCHIP_MEMORY_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_ONCHIP_MEMORY_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_ONCHIP_MEMORY_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_ONCHIP_MEMORY_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory

/*
 * Macros for device 'Qsys_alu_0', class 'Qsys_alu'
 * Path to the device is from the master group 'hps'.
 * The macros are prefixed with 'HPS_QSYS_ALU_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_QSYS_ALU_0_COMPONENT_TYPE Qsys_alu
#define HPS_QSYS_ALU_0_COMPONENT_NAME Qsys_alu_0
#define HPS_QSYS_ALU_0_BASE 0x0
#define HPS_QSYS_ALU_0_SPAN 32
#define HPS_QSYS_ALU_0_END 0x1f

/*
 * Macros for device 'SystemID', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps'.
 * The macros are prefixed with 'HPS_SYSTEMID_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_SYSTEMID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_SYSTEMID_COMPONENT_NAME SystemID
#define HPS_SYSTEMID_BASE 0x20
#define HPS_SYSTEMID_SPAN 8
#define HPS_SYSTEMID_END 0x27
#define HPS_SYSTEMID_ID 2899645186
#define HPS_SYSTEMID_TIMESTAMP 1575579111

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps'.
 * The macros are prefixed with 'HPS_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_JTAG_UART_BASE 0x28
#define HPS_JTAG_UART_SPAN 8
#define HPS_JTAG_UART_END 0x2f
#define HPS_JTAG_UART_IRQ 0
#define HPS_JTAG_UART_READ_DEPTH 64
#define HPS_JTAG_UART_READ_THRESHOLD 8
#define HPS_JTAG_UART_WRITE_DEPTH 64
#define HPS_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_BRIDGES_HPS_AXI_SDRAM_COMPONENT_NAME hps_axi_sdram
#define HPS_BRIDGES_HPS_AXI_SDRAM_BASE 0x0
#define HPS_BRIDGES_HPS_AXI_SDRAM_SPAN 0x80000000
#define HPS_BRIDGES_HPS_AXI_SDRAM_END 0x7fffffff
#define HPS_BRIDGES_HPS_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_BRIDGES_HPS_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_BRIDGES_HPS_AXI_SDRAM_WRITABLE 1
#define HPS_BRIDGES_HPS_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_BRIDGES_HPS_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_BRIDGES_HPS_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'onchip_memory', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_ONCHIP_MEMORY_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_ONCHIP_MEMORY_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_BRIDGES_ONCHIP_MEMORY_COMPONENT_NAME onchip_memory
#define HPS_BRIDGES_ONCHIP_MEMORY_BASE 0x0
#define HPS_BRIDGES_ONCHIP_MEMORY_SPAN 65536
#define HPS_BRIDGES_ONCHIP_MEMORY_END 0xffff
#define HPS_BRIDGES_ONCHIP_MEMORY_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_BRIDGES_ONCHIP_MEMORY_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_BRIDGES_ONCHIP_MEMORY_CONTENTS_INFO ""
#define HPS_BRIDGES_ONCHIP_MEMORY_DUAL_PORT 0
#define HPS_BRIDGES_ONCHIP_MEMORY_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_BRIDGES_ONCHIP_MEMORY_INIT_CONTENTS_FILE soc_system_onchip_memory
#define HPS_BRIDGES_ONCHIP_MEMORY_INIT_MEM_CONTENT 1
#define HPS_BRIDGES_ONCHIP_MEMORY_INSTANCE_ID NONE
#define HPS_BRIDGES_ONCHIP_MEMORY_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_BRIDGES_ONCHIP_MEMORY_RAM_BLOCK_TYPE AUTO
#define HPS_BRIDGES_ONCHIP_MEMORY_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_BRIDGES_ONCHIP_MEMORY_SINGLE_CLOCK_OP 0
#define HPS_BRIDGES_ONCHIP_MEMORY_SIZE_MULTIPLE 1
#define HPS_BRIDGES_ONCHIP_MEMORY_SIZE_VALUE 65536
#define HPS_BRIDGES_ONCHIP_MEMORY_WRITABLE 1
#define HPS_BRIDGES_ONCHIP_MEMORY_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_BRIDGES_ONCHIP_MEMORY_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_BRIDGES_ONCHIP_MEMORY_MEMORY_INFO_GENERATE_HEX 1
#define HPS_BRIDGES_ONCHIP_MEMORY_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_BRIDGES_ONCHIP_MEMORY_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_BRIDGES_ONCHIP_MEMORY_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_BRIDGES_ONCHIP_MEMORY_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory

/*
 * Macros for device 'Qsys_alu_0', class 'Qsys_alu'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_QSYS_ALU_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_QSYS_ALU_0_COMPONENT_TYPE Qsys_alu
#define HPS_BRIDGES_QSYS_ALU_0_COMPONENT_NAME Qsys_alu_0
#define HPS_BRIDGES_QSYS_ALU_0_BASE 0x0
#define HPS_BRIDGES_QSYS_ALU_0_SPAN 32
#define HPS_BRIDGES_QSYS_ALU_0_END 0x1f

/*
 * Macros for device 'SystemID', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_SYSTEMID_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_SYSTEMID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_BRIDGES_SYSTEMID_COMPONENT_NAME SystemID
#define HPS_BRIDGES_SYSTEMID_BASE 0x20
#define HPS_BRIDGES_SYSTEMID_SPAN 8
#define HPS_BRIDGES_SYSTEMID_END 0x27
#define HPS_BRIDGES_SYSTEMID_ID 2899645186
#define HPS_BRIDGES_SYSTEMID_TIMESTAMP 1575579111

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_BRIDGES_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_BRIDGES_JTAG_UART_BASE 0x28
#define HPS_BRIDGES_JTAG_UART_SPAN 8
#define HPS_BRIDGES_JTAG_UART_END 0x2f
#define HPS_BRIDGES_JTAG_UART_READ_DEPTH 64
#define HPS_BRIDGES_JTAG_UART_READ_THRESHOLD 8
#define HPS_BRIDGES_JTAG_UART_WRITE_DEPTH 64
#define HPS_BRIDGES_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_GMAC0_COMPONENT_TYPE stmmac
#define HPS_BRIDGES_HPS_GMAC0_COMPONENT_NAME hps_gmac0
#define HPS_BRIDGES_HPS_GMAC0_BASE 0xff700000
#define HPS_BRIDGES_HPS_GMAC0_SPAN 8192
#define HPS_BRIDGES_HPS_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_GMAC1_COMPONENT_TYPE stmmac
#define HPS_BRIDGES_HPS_GMAC1_COMPONENT_NAME hps_gmac1
#define HPS_BRIDGES_HPS_GMAC1_BASE 0xff702000
#define HPS_BRIDGES_HPS_GMAC1_SPAN 8192
#define HPS_BRIDGES_HPS_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_BRIDGES_HPS_SDMMC_COMPONENT_NAME hps_sdmmc
#define HPS_BRIDGES_HPS_SDMMC_BASE 0xff704000
#define HPS_BRIDGES_HPS_SDMMC_SPAN 4096
#define HPS_BRIDGES_HPS_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_BRIDGES_HPS_QSPI_COMPONENT_NAME hps_qspi
#define HPS_BRIDGES_HPS_QSPI_BASE 0xff705000
#define HPS_BRIDGES_HPS_QSPI_SPAN 256
#define HPS_BRIDGES_HPS_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_BRIDGES_HPS_FPGAMGR_COMPONENT_NAME hps_fpgamgr
#define HPS_BRIDGES_HPS_FPGAMGR_BASE 0xff706000
#define HPS_BRIDGES_HPS_FPGAMGR_SPAN 4096
#define HPS_BRIDGES_HPS_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_BRIDGES_HPS_GPIO0_COMPONENT_NAME hps_gpio0
#define HPS_BRIDGES_HPS_GPIO0_BASE 0xff708000
#define HPS_BRIDGES_HPS_GPIO0_SPAN 256
#define HPS_BRIDGES_HPS_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_BRIDGES_HPS_GPIO1_COMPONENT_NAME hps_gpio1
#define HPS_BRIDGES_HPS_GPIO1_BASE 0xff709000
#define HPS_BRIDGES_HPS_GPIO1_SPAN 256
#define HPS_BRIDGES_HPS_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_BRIDGES_HPS_GPIO2_COMPONENT_NAME hps_gpio2
#define HPS_BRIDGES_HPS_GPIO2_BASE 0xff70a000
#define HPS_BRIDGES_HPS_GPIO2_SPAN 256
#define HPS_BRIDGES_HPS_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_BRIDGES_HPS_L3REGS_COMPONENT_NAME hps_l3regs
#define HPS_BRIDGES_HPS_L3REGS_BASE 0xff800000
#define HPS_BRIDGES_HPS_L3REGS_SPAN 4096
#define HPS_BRIDGES_HPS_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_NAND0_COMPONENT_TYPE denali_nand
#define HPS_BRIDGES_HPS_NAND0_COMPONENT_NAME hps_nand0
#define HPS_BRIDGES_HPS_NAND0_BASE 0xff900000
#define HPS_BRIDGES_HPS_NAND0_SPAN 65536
#define HPS_BRIDGES_HPS_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_usb0', class 'usb'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_USB0_COMPONENT_TYPE usb
#define HPS_BRIDGES_HPS_USB0_COMPONENT_NAME hps_usb0
#define HPS_BRIDGES_HPS_USB0_BASE 0xffb00000
#define HPS_BRIDGES_HPS_USB0_SPAN 262144
#define HPS_BRIDGES_HPS_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_usb1', class 'usb'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_USB1_COMPONENT_TYPE usb
#define HPS_BRIDGES_HPS_USB1_COMPONENT_NAME hps_usb1
#define HPS_BRIDGES_HPS_USB1_BASE 0xffb40000
#define HPS_BRIDGES_HPS_USB1_SPAN 262144
#define HPS_BRIDGES_HPS_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_BRIDGES_HPS_DCAN0_COMPONENT_NAME hps_dcan0
#define HPS_BRIDGES_HPS_DCAN0_BASE 0xffc00000
#define HPS_BRIDGES_HPS_DCAN0_SPAN 4096
#define HPS_BRIDGES_HPS_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_BRIDGES_HPS_DCAN1_COMPONENT_NAME hps_dcan1
#define HPS_BRIDGES_HPS_DCAN1_BASE 0xffc01000
#define HPS_BRIDGES_HPS_DCAN1_SPAN 4096
#define HPS_BRIDGES_HPS_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_UART0_COMPONENT_TYPE snps_uart
#define HPS_BRIDGES_HPS_UART0_COMPONENT_NAME hps_uart0
#define HPS_BRIDGES_HPS_UART0_BASE 0xffc02000
#define HPS_BRIDGES_HPS_UART0_SPAN 256
#define HPS_BRIDGES_HPS_UART0_END 0xffc020ff
#define HPS_BRIDGES_HPS_UART0_FIFO_DEPTH 128
#define HPS_BRIDGES_HPS_UART0_FIFO_HWFC 0
#define HPS_BRIDGES_HPS_UART0_FIFO_MODE 1
#define HPS_BRIDGES_HPS_UART0_FIFO_SWFC 0
#define HPS_BRIDGES_HPS_UART0_FREQ 100000000

/*
 * Macros for device 'hps_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_UART1_COMPONENT_TYPE snps_uart
#define HPS_BRIDGES_HPS_UART1_COMPONENT_NAME hps_uart1
#define HPS_BRIDGES_HPS_UART1_BASE 0xffc03000
#define HPS_BRIDGES_HPS_UART1_SPAN 256
#define HPS_BRIDGES_HPS_UART1_END 0xffc030ff
#define HPS_BRIDGES_HPS_UART1_FIFO_DEPTH 128
#define HPS_BRIDGES_HPS_UART1_FIFO_HWFC 0
#define HPS_BRIDGES_HPS_UART1_FIFO_MODE 1
#define HPS_BRIDGES_HPS_UART1_FIFO_SWFC 0
#define HPS_BRIDGES_HPS_UART1_FREQ 100000000

/*
 * Macros for device 'hps_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_BRIDGES_HPS_I2C0_COMPONENT_NAME hps_i2c0
#define HPS_BRIDGES_HPS_I2C0_BASE 0xffc04000
#define HPS_BRIDGES_HPS_I2C0_SPAN 256
#define HPS_BRIDGES_HPS_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_BRIDGES_HPS_I2C1_COMPONENT_NAME hps_i2c1
#define HPS_BRIDGES_HPS_I2C1_BASE 0xffc05000
#define HPS_BRIDGES_HPS_I2C1_SPAN 256
#define HPS_BRIDGES_HPS_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_BRIDGES_HPS_I2C2_COMPONENT_NAME hps_i2c2
#define HPS_BRIDGES_HPS_I2C2_BASE 0xffc06000
#define HPS_BRIDGES_HPS_I2C2_SPAN 256
#define HPS_BRIDGES_HPS_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_BRIDGES_HPS_I2C3_COMPONENT_NAME hps_i2c3
#define HPS_BRIDGES_HPS_I2C3_BASE 0xffc07000
#define HPS_BRIDGES_HPS_I2C3_SPAN 256
#define HPS_BRIDGES_HPS_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_BRIDGES_HPS_TIMER0_COMPONENT_NAME hps_timer0
#define HPS_BRIDGES_HPS_TIMER0_BASE 0xffc08000
#define HPS_BRIDGES_HPS_TIMER0_SPAN 256
#define HPS_BRIDGES_HPS_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_BRIDGES_HPS_TIMER1_COMPONENT_NAME hps_timer1
#define HPS_BRIDGES_HPS_TIMER1_BASE 0xffc09000
#define HPS_BRIDGES_HPS_TIMER1_SPAN 256
#define HPS_BRIDGES_HPS_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_BRIDGES_HPS_SDRCTL_COMPONENT_NAME hps_sdrctl
#define HPS_BRIDGES_HPS_SDRCTL_BASE 0xffc25000
#define HPS_BRIDGES_HPS_SDRCTL_SPAN 4096
#define HPS_BRIDGES_HPS_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_BRIDGES_HPS_TIMER2_COMPONENT_NAME hps_timer2
#define HPS_BRIDGES_HPS_TIMER2_BASE 0xffd00000
#define HPS_BRIDGES_HPS_TIMER2_SPAN 256
#define HPS_BRIDGES_HPS_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_BRIDGES_HPS_TIMER3_COMPONENT_NAME hps_timer3
#define HPS_BRIDGES_HPS_TIMER3_BASE 0xffd01000
#define HPS_BRIDGES_HPS_TIMER3_SPAN 256
#define HPS_BRIDGES_HPS_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_BRIDGES_HPS_CLKMGR_COMPONENT_NAME hps_clkmgr
#define HPS_BRIDGES_HPS_CLKMGR_BASE 0xffd04000
#define HPS_BRIDGES_HPS_CLKMGR_SPAN 4096
#define HPS_BRIDGES_HPS_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_BRIDGES_HPS_RSTMGR_COMPONENT_NAME hps_rstmgr
#define HPS_BRIDGES_HPS_RSTMGR_BASE 0xffd05000
#define HPS_BRIDGES_HPS_RSTMGR_SPAN 256
#define HPS_BRIDGES_HPS_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_BRIDGES_HPS_SYSMGR_COMPONENT_NAME hps_sysmgr
#define HPS_BRIDGES_HPS_SYSMGR_BASE 0xffd08000
#define HPS_BRIDGES_HPS_SYSMGR_SPAN 1024
#define HPS_BRIDGES_HPS_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_BRIDGES_HPS_DMA_COMPONENT_NAME hps_dma
#define HPS_BRIDGES_HPS_DMA_BASE 0xffe01000
#define HPS_BRIDGES_HPS_DMA_SPAN 4096
#define HPS_BRIDGES_HPS_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_spim0', class 'spi'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_SPIM0_COMPONENT_TYPE spi
#define HPS_BRIDGES_HPS_SPIM0_COMPONENT_NAME hps_spim0
#define HPS_BRIDGES_HPS_SPIM0_BASE 0xfff00000
#define HPS_BRIDGES_HPS_SPIM0_SPAN 256
#define HPS_BRIDGES_HPS_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_spim1', class 'spi'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_SPIM1_COMPONENT_TYPE spi
#define HPS_BRIDGES_HPS_SPIM1_COMPONENT_NAME hps_spim1
#define HPS_BRIDGES_HPS_SPIM1_BASE 0xfff01000
#define HPS_BRIDGES_HPS_SPIM1_SPAN 256
#define HPS_BRIDGES_HPS_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_BRIDGES_HPS_TIMER_COMPONENT_NAME hps_timer
#define HPS_BRIDGES_HPS_TIMER_BASE 0xfffec600
#define HPS_BRIDGES_HPS_TIMER_SPAN 256
#define HPS_BRIDGES_HPS_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_BRIDGES_HPS_ARM_GIC_0_COMPONENT_NAME hps_arm_gic_0
#define HPS_BRIDGES_HPS_ARM_GIC_0_BASE 0xfffed000
#define HPS_BRIDGES_HPS_ARM_GIC_0_SPAN 4096
#define HPS_BRIDGES_HPS_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_BRIDGES_HPS_L2_COMPONENT_NAME hps_L2
#define HPS_BRIDGES_HPS_L2_BASE 0xfffef000
#define HPS_BRIDGES_HPS_L2_SPAN 4096
#define HPS_BRIDGES_HPS_L2_END 0xfffeffff

/*
 * Macros for device 'hps_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_bridges'.
 * The macros are prefixed with 'HPS_BRIDGES_HPS_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_BRIDGES_HPS_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_BRIDGES_HPS_AXI_OCRAM_COMPONENT_NAME hps_axi_ocram
#define HPS_BRIDGES_HPS_AXI_OCRAM_BASE 0xffff0000
#define HPS_BRIDGES_HPS_AXI_OCRAM_SPAN 65536
#define HPS_BRIDGES_HPS_AXI_OCRAM_END 0xffffffff
#define HPS_BRIDGES_HPS_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_BRIDGES_HPS_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_BRIDGES_HPS_AXI_OCRAM_WRITABLE 1
#define HPS_BRIDGES_HPS_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_BRIDGES_HPS_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_BRIDGES_HPS_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_ARM_A9_0_HPS_AXI_SDRAM_COMPONENT_NAME hps_axi_sdram
#define HPS_ARM_A9_0_HPS_AXI_SDRAM_BASE 0x0
#define HPS_ARM_A9_0_HPS_AXI_SDRAM_SPAN 0x80000000
#define HPS_ARM_A9_0_HPS_AXI_SDRAM_END 0x7fffffff
#define HPS_ARM_A9_0_HPS_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_ARM_A9_0_HPS_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_ARM_A9_0_HPS_AXI_SDRAM_WRITABLE 1
#define HPS_ARM_A9_0_HPS_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_ARM_A9_0_HPS_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_ARM_A9_0_HPS_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'onchip_memory', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_ONCHIP_MEMORY_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_ONCHIP_MEMORY_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_ARM_A9_0_ONCHIP_MEMORY_COMPONENT_NAME onchip_memory
#define HPS_ARM_A9_0_ONCHIP_MEMORY_BASE 0xc0000000
#define HPS_ARM_A9_0_ONCHIP_MEMORY_SPAN 65536
#define HPS_ARM_A9_0_ONCHIP_MEMORY_END 0xc000ffff
#define HPS_ARM_A9_0_ONCHIP_MEMORY_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_ARM_A9_0_ONCHIP_MEMORY_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_ARM_A9_0_ONCHIP_MEMORY_CONTENTS_INFO ""
#define HPS_ARM_A9_0_ONCHIP_MEMORY_DUAL_PORT 0
#define HPS_ARM_A9_0_ONCHIP_MEMORY_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_ARM_A9_0_ONCHIP_MEMORY_INIT_CONTENTS_FILE soc_system_onchip_memory
#define HPS_ARM_A9_0_ONCHIP_MEMORY_INIT_MEM_CONTENT 1
#define HPS_ARM_A9_0_ONCHIP_MEMORY_INSTANCE_ID NONE
#define HPS_ARM_A9_0_ONCHIP_MEMORY_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_ARM_A9_0_ONCHIP_MEMORY_RAM_BLOCK_TYPE AUTO
#define HPS_ARM_A9_0_ONCHIP_MEMORY_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_ARM_A9_0_ONCHIP_MEMORY_SINGLE_CLOCK_OP 0
#define HPS_ARM_A9_0_ONCHIP_MEMORY_SIZE_MULTIPLE 1
#define HPS_ARM_A9_0_ONCHIP_MEMORY_SIZE_VALUE 65536
#define HPS_ARM_A9_0_ONCHIP_MEMORY_WRITABLE 1
#define HPS_ARM_A9_0_ONCHIP_MEMORY_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_ARM_A9_0_ONCHIP_MEMORY_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_ARM_A9_0_ONCHIP_MEMORY_MEMORY_INFO_GENERATE_HEX 1
#define HPS_ARM_A9_0_ONCHIP_MEMORY_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_ARM_A9_0_ONCHIP_MEMORY_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_ARM_A9_0_ONCHIP_MEMORY_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_ARM_A9_0_ONCHIP_MEMORY_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory

/*
 * Macros for device 'Qsys_alu_0', class 'Qsys_alu'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_QSYS_ALU_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_QSYS_ALU_0_COMPONENT_TYPE Qsys_alu
#define HPS_ARM_A9_0_QSYS_ALU_0_COMPONENT_NAME Qsys_alu_0
#define HPS_ARM_A9_0_QSYS_ALU_0_BASE 0xff200000
#define HPS_ARM_A9_0_QSYS_ALU_0_SPAN 32
#define HPS_ARM_A9_0_QSYS_ALU_0_END 0xff20001f

/*
 * Macros for device 'SystemID', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_SYSTEMID_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_SYSTEMID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_ARM_A9_0_SYSTEMID_COMPONENT_NAME SystemID
#define HPS_ARM_A9_0_SYSTEMID_BASE 0xff200020
#define HPS_ARM_A9_0_SYSTEMID_SPAN 8
#define HPS_ARM_A9_0_SYSTEMID_END 0xff200027
#define HPS_ARM_A9_0_SYSTEMID_ID 2899645186
#define HPS_ARM_A9_0_SYSTEMID_TIMESTAMP 1575579111

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_ARM_A9_0_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_ARM_A9_0_JTAG_UART_BASE 0xff200028
#define HPS_ARM_A9_0_JTAG_UART_SPAN 8
#define HPS_ARM_A9_0_JTAG_UART_END 0xff20002f
#define HPS_ARM_A9_0_JTAG_UART_READ_DEPTH 64
#define HPS_ARM_A9_0_JTAG_UART_READ_THRESHOLD 8
#define HPS_ARM_A9_0_JTAG_UART_WRITE_DEPTH 64
#define HPS_ARM_A9_0_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_GMAC0_COMPONENT_TYPE stmmac
#define HPS_ARM_A9_0_HPS_GMAC0_COMPONENT_NAME hps_gmac0
#define HPS_ARM_A9_0_HPS_GMAC0_BASE 0xff700000
#define HPS_ARM_A9_0_HPS_GMAC0_SPAN 8192
#define HPS_ARM_A9_0_HPS_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_GMAC1_COMPONENT_TYPE stmmac
#define HPS_ARM_A9_0_HPS_GMAC1_COMPONENT_NAME hps_gmac1
#define HPS_ARM_A9_0_HPS_GMAC1_BASE 0xff702000
#define HPS_ARM_A9_0_HPS_GMAC1_SPAN 8192
#define HPS_ARM_A9_0_HPS_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_ARM_A9_0_HPS_SDMMC_COMPONENT_NAME hps_sdmmc
#define HPS_ARM_A9_0_HPS_SDMMC_BASE 0xff704000
#define HPS_ARM_A9_0_HPS_SDMMC_SPAN 4096
#define HPS_ARM_A9_0_HPS_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_ARM_A9_0_HPS_QSPI_COMPONENT_NAME hps_qspi
#define HPS_ARM_A9_0_HPS_QSPI_BASE 0xff705000
#define HPS_ARM_A9_0_HPS_QSPI_SPAN 256
#define HPS_ARM_A9_0_HPS_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_ARM_A9_0_HPS_FPGAMGR_COMPONENT_NAME hps_fpgamgr
#define HPS_ARM_A9_0_HPS_FPGAMGR_BASE 0xff706000
#define HPS_ARM_A9_0_HPS_FPGAMGR_SPAN 4096
#define HPS_ARM_A9_0_HPS_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_ARM_A9_0_HPS_GPIO0_COMPONENT_NAME hps_gpio0
#define HPS_ARM_A9_0_HPS_GPIO0_BASE 0xff708000
#define HPS_ARM_A9_0_HPS_GPIO0_SPAN 256
#define HPS_ARM_A9_0_HPS_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_ARM_A9_0_HPS_GPIO1_COMPONENT_NAME hps_gpio1
#define HPS_ARM_A9_0_HPS_GPIO1_BASE 0xff709000
#define HPS_ARM_A9_0_HPS_GPIO1_SPAN 256
#define HPS_ARM_A9_0_HPS_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_ARM_A9_0_HPS_GPIO2_COMPONENT_NAME hps_gpio2
#define HPS_ARM_A9_0_HPS_GPIO2_BASE 0xff70a000
#define HPS_ARM_A9_0_HPS_GPIO2_SPAN 256
#define HPS_ARM_A9_0_HPS_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_ARM_A9_0_HPS_L3REGS_COMPONENT_NAME hps_l3regs
#define HPS_ARM_A9_0_HPS_L3REGS_BASE 0xff800000
#define HPS_ARM_A9_0_HPS_L3REGS_SPAN 4096
#define HPS_ARM_A9_0_HPS_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_NAND0_COMPONENT_TYPE denali_nand
#define HPS_ARM_A9_0_HPS_NAND0_COMPONENT_NAME hps_nand0
#define HPS_ARM_A9_0_HPS_NAND0_BASE 0xff900000
#define HPS_ARM_A9_0_HPS_NAND0_SPAN 65536
#define HPS_ARM_A9_0_HPS_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_usb0', class 'usb'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_USB0_COMPONENT_TYPE usb
#define HPS_ARM_A9_0_HPS_USB0_COMPONENT_NAME hps_usb0
#define HPS_ARM_A9_0_HPS_USB0_BASE 0xffb00000
#define HPS_ARM_A9_0_HPS_USB0_SPAN 262144
#define HPS_ARM_A9_0_HPS_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_usb1', class 'usb'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_USB1_COMPONENT_TYPE usb
#define HPS_ARM_A9_0_HPS_USB1_COMPONENT_NAME hps_usb1
#define HPS_ARM_A9_0_HPS_USB1_BASE 0xffb40000
#define HPS_ARM_A9_0_HPS_USB1_SPAN 262144
#define HPS_ARM_A9_0_HPS_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_ARM_A9_0_HPS_DCAN0_COMPONENT_NAME hps_dcan0
#define HPS_ARM_A9_0_HPS_DCAN0_BASE 0xffc00000
#define HPS_ARM_A9_0_HPS_DCAN0_SPAN 4096
#define HPS_ARM_A9_0_HPS_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_ARM_A9_0_HPS_DCAN1_COMPONENT_NAME hps_dcan1
#define HPS_ARM_A9_0_HPS_DCAN1_BASE 0xffc01000
#define HPS_ARM_A9_0_HPS_DCAN1_SPAN 4096
#define HPS_ARM_A9_0_HPS_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_UART0_COMPONENT_TYPE snps_uart
#define HPS_ARM_A9_0_HPS_UART0_COMPONENT_NAME hps_uart0
#define HPS_ARM_A9_0_HPS_UART0_BASE 0xffc02000
#define HPS_ARM_A9_0_HPS_UART0_SPAN 256
#define HPS_ARM_A9_0_HPS_UART0_END 0xffc020ff
#define HPS_ARM_A9_0_HPS_UART0_FIFO_DEPTH 128
#define HPS_ARM_A9_0_HPS_UART0_FIFO_HWFC 0
#define HPS_ARM_A9_0_HPS_UART0_FIFO_MODE 1
#define HPS_ARM_A9_0_HPS_UART0_FIFO_SWFC 0
#define HPS_ARM_A9_0_HPS_UART0_FREQ 100000000

/*
 * Macros for device 'hps_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_UART1_COMPONENT_TYPE snps_uart
#define HPS_ARM_A9_0_HPS_UART1_COMPONENT_NAME hps_uart1
#define HPS_ARM_A9_0_HPS_UART1_BASE 0xffc03000
#define HPS_ARM_A9_0_HPS_UART1_SPAN 256
#define HPS_ARM_A9_0_HPS_UART1_END 0xffc030ff
#define HPS_ARM_A9_0_HPS_UART1_FIFO_DEPTH 128
#define HPS_ARM_A9_0_HPS_UART1_FIFO_HWFC 0
#define HPS_ARM_A9_0_HPS_UART1_FIFO_MODE 1
#define HPS_ARM_A9_0_HPS_UART1_FIFO_SWFC 0
#define HPS_ARM_A9_0_HPS_UART1_FREQ 100000000

/*
 * Macros for device 'hps_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_ARM_A9_0_HPS_I2C0_COMPONENT_NAME hps_i2c0
#define HPS_ARM_A9_0_HPS_I2C0_BASE 0xffc04000
#define HPS_ARM_A9_0_HPS_I2C0_SPAN 256
#define HPS_ARM_A9_0_HPS_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_ARM_A9_0_HPS_I2C1_COMPONENT_NAME hps_i2c1
#define HPS_ARM_A9_0_HPS_I2C1_BASE 0xffc05000
#define HPS_ARM_A9_0_HPS_I2C1_SPAN 256
#define HPS_ARM_A9_0_HPS_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_ARM_A9_0_HPS_I2C2_COMPONENT_NAME hps_i2c2
#define HPS_ARM_A9_0_HPS_I2C2_BASE 0xffc06000
#define HPS_ARM_A9_0_HPS_I2C2_SPAN 256
#define HPS_ARM_A9_0_HPS_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_ARM_A9_0_HPS_I2C3_COMPONENT_NAME hps_i2c3
#define HPS_ARM_A9_0_HPS_I2C3_BASE 0xffc07000
#define HPS_ARM_A9_0_HPS_I2C3_SPAN 256
#define HPS_ARM_A9_0_HPS_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_ARM_A9_0_HPS_TIMER0_COMPONENT_NAME hps_timer0
#define HPS_ARM_A9_0_HPS_TIMER0_BASE 0xffc08000
#define HPS_ARM_A9_0_HPS_TIMER0_SPAN 256
#define HPS_ARM_A9_0_HPS_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_ARM_A9_0_HPS_TIMER1_COMPONENT_NAME hps_timer1
#define HPS_ARM_A9_0_HPS_TIMER1_BASE 0xffc09000
#define HPS_ARM_A9_0_HPS_TIMER1_SPAN 256
#define HPS_ARM_A9_0_HPS_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_ARM_A9_0_HPS_SDRCTL_COMPONENT_NAME hps_sdrctl
#define HPS_ARM_A9_0_HPS_SDRCTL_BASE 0xffc25000
#define HPS_ARM_A9_0_HPS_SDRCTL_SPAN 4096
#define HPS_ARM_A9_0_HPS_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_ARM_A9_0_HPS_TIMER2_COMPONENT_NAME hps_timer2
#define HPS_ARM_A9_0_HPS_TIMER2_BASE 0xffd00000
#define HPS_ARM_A9_0_HPS_TIMER2_SPAN 256
#define HPS_ARM_A9_0_HPS_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_ARM_A9_0_HPS_TIMER3_COMPONENT_NAME hps_timer3
#define HPS_ARM_A9_0_HPS_TIMER3_BASE 0xffd01000
#define HPS_ARM_A9_0_HPS_TIMER3_SPAN 256
#define HPS_ARM_A9_0_HPS_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_ARM_A9_0_HPS_WD_TIMER0_COMPONENT_NAME hps_wd_timer0
#define HPS_ARM_A9_0_HPS_WD_TIMER0_BASE 0xffd02000
#define HPS_ARM_A9_0_HPS_WD_TIMER0_SPAN 256
#define HPS_ARM_A9_0_HPS_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_ARM_A9_0_HPS_WD_TIMER1_COMPONENT_NAME hps_wd_timer1
#define HPS_ARM_A9_0_HPS_WD_TIMER1_BASE 0xffd03000
#define HPS_ARM_A9_0_HPS_WD_TIMER1_SPAN 256
#define HPS_ARM_A9_0_HPS_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_ARM_A9_0_HPS_CLKMGR_COMPONENT_NAME hps_clkmgr
#define HPS_ARM_A9_0_HPS_CLKMGR_BASE 0xffd04000
#define HPS_ARM_A9_0_HPS_CLKMGR_SPAN 4096
#define HPS_ARM_A9_0_HPS_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_ARM_A9_0_HPS_RSTMGR_COMPONENT_NAME hps_rstmgr
#define HPS_ARM_A9_0_HPS_RSTMGR_BASE 0xffd05000
#define HPS_ARM_A9_0_HPS_RSTMGR_SPAN 256
#define HPS_ARM_A9_0_HPS_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_ARM_A9_0_HPS_SYSMGR_COMPONENT_NAME hps_sysmgr
#define HPS_ARM_A9_0_HPS_SYSMGR_BASE 0xffd08000
#define HPS_ARM_A9_0_HPS_SYSMGR_SPAN 1024
#define HPS_ARM_A9_0_HPS_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_ARM_A9_0_HPS_DMA_COMPONENT_NAME hps_dma
#define HPS_ARM_A9_0_HPS_DMA_BASE 0xffe01000
#define HPS_ARM_A9_0_HPS_DMA_SPAN 4096
#define HPS_ARM_A9_0_HPS_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_spim0', class 'spi'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_SPIM0_COMPONENT_TYPE spi
#define HPS_ARM_A9_0_HPS_SPIM0_COMPONENT_NAME hps_spim0
#define HPS_ARM_A9_0_HPS_SPIM0_BASE 0xfff00000
#define HPS_ARM_A9_0_HPS_SPIM0_SPAN 256
#define HPS_ARM_A9_0_HPS_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_spim1', class 'spi'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_SPIM1_COMPONENT_TYPE spi
#define HPS_ARM_A9_0_HPS_SPIM1_COMPONENT_NAME hps_spim1
#define HPS_ARM_A9_0_HPS_SPIM1_BASE 0xfff01000
#define HPS_ARM_A9_0_HPS_SPIM1_SPAN 256
#define HPS_ARM_A9_0_HPS_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_scu', class 'scu'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_SCU_COMPONENT_TYPE scu
#define HPS_ARM_A9_0_HPS_SCU_COMPONENT_NAME hps_scu
#define HPS_ARM_A9_0_HPS_SCU_BASE 0xfffec000
#define HPS_ARM_A9_0_HPS_SCU_SPAN 256
#define HPS_ARM_A9_0_HPS_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_ARM_A9_0_HPS_TIMER_COMPONENT_NAME hps_timer
#define HPS_ARM_A9_0_HPS_TIMER_BASE 0xfffec600
#define HPS_ARM_A9_0_HPS_TIMER_SPAN 256
#define HPS_ARM_A9_0_HPS_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_ARM_A9_0_HPS_ARM_GIC_0_COMPONENT_NAME hps_arm_gic_0
#define HPS_ARM_A9_0_HPS_ARM_GIC_0_BASE 0xfffed000
#define HPS_ARM_A9_0_HPS_ARM_GIC_0_SPAN 4096
#define HPS_ARM_A9_0_HPS_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_ARM_A9_0_HPS_L2_COMPONENT_NAME hps_L2
#define HPS_ARM_A9_0_HPS_L2_BASE 0xfffef000
#define HPS_ARM_A9_0_HPS_L2_SPAN 4096
#define HPS_ARM_A9_0_HPS_L2_END 0xfffeffff

/*
 * Macros for device 'hps_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_arm_a9_0'.
 * The macros are prefixed with 'HPS_ARM_A9_0_HPS_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_0_HPS_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_ARM_A9_0_HPS_AXI_OCRAM_COMPONENT_NAME hps_axi_ocram
#define HPS_ARM_A9_0_HPS_AXI_OCRAM_BASE 0xffff0000
#define HPS_ARM_A9_0_HPS_AXI_OCRAM_SPAN 65536
#define HPS_ARM_A9_0_HPS_AXI_OCRAM_END 0xffffffff
#define HPS_ARM_A9_0_HPS_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_ARM_A9_0_HPS_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_ARM_A9_0_HPS_AXI_OCRAM_WRITABLE 1
#define HPS_ARM_A9_0_HPS_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_ARM_A9_0_HPS_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_ARM_A9_0_HPS_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'hps_axi_sdram', class 'axi_sdram'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_AXI_SDRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_AXI_SDRAM_COMPONENT_TYPE axi_sdram
#define HPS_ARM_A9_1_HPS_AXI_SDRAM_COMPONENT_NAME hps_axi_sdram
#define HPS_ARM_A9_1_HPS_AXI_SDRAM_BASE 0x0
#define HPS_ARM_A9_1_HPS_AXI_SDRAM_SPAN 0x80000000
#define HPS_ARM_A9_1_HPS_AXI_SDRAM_END 0x7fffffff
#define HPS_ARM_A9_1_HPS_AXI_SDRAM_SIZE_MULTIPLE 1
#define HPS_ARM_A9_1_HPS_AXI_SDRAM_SIZE_VALUE 1<<31
#define HPS_ARM_A9_1_HPS_AXI_SDRAM_WRITABLE 1
#define HPS_ARM_A9_1_HPS_AXI_SDRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_ARM_A9_1_HPS_AXI_SDRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_ARM_A9_1_HPS_AXI_SDRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 31

/*
 * Macros for device 'onchip_memory', class 'altera_avalon_onchip_memory2'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_ONCHIP_MEMORY_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_ONCHIP_MEMORY_COMPONENT_TYPE altera_avalon_onchip_memory2
#define HPS_ARM_A9_1_ONCHIP_MEMORY_COMPONENT_NAME onchip_memory
#define HPS_ARM_A9_1_ONCHIP_MEMORY_BASE 0xc0000000
#define HPS_ARM_A9_1_ONCHIP_MEMORY_SPAN 65536
#define HPS_ARM_A9_1_ONCHIP_MEMORY_END 0xc000ffff
#define HPS_ARM_A9_1_ONCHIP_MEMORY_ALLOW_IN_SYSTEM_MEMORY_CONTENT_EDITOR 0
#define HPS_ARM_A9_1_ONCHIP_MEMORY_ALLOW_MRAM_SIM_CONTENTS_ONLY_FILE 0
#define HPS_ARM_A9_1_ONCHIP_MEMORY_CONTENTS_INFO ""
#define HPS_ARM_A9_1_ONCHIP_MEMORY_DUAL_PORT 0
#define HPS_ARM_A9_1_ONCHIP_MEMORY_GUI_RAM_BLOCK_TYPE AUTO
#define HPS_ARM_A9_1_ONCHIP_MEMORY_INIT_CONTENTS_FILE soc_system_onchip_memory
#define HPS_ARM_A9_1_ONCHIP_MEMORY_INIT_MEM_CONTENT 1
#define HPS_ARM_A9_1_ONCHIP_MEMORY_INSTANCE_ID NONE
#define HPS_ARM_A9_1_ONCHIP_MEMORY_NON_DEFAULT_INIT_FILE_ENABLED 0
#define HPS_ARM_A9_1_ONCHIP_MEMORY_RAM_BLOCK_TYPE AUTO
#define HPS_ARM_A9_1_ONCHIP_MEMORY_READ_DURING_WRITE_MODE DONT_CARE
#define HPS_ARM_A9_1_ONCHIP_MEMORY_SINGLE_CLOCK_OP 0
#define HPS_ARM_A9_1_ONCHIP_MEMORY_SIZE_MULTIPLE 1
#define HPS_ARM_A9_1_ONCHIP_MEMORY_SIZE_VALUE 65536
#define HPS_ARM_A9_1_ONCHIP_MEMORY_WRITABLE 1
#define HPS_ARM_A9_1_ONCHIP_MEMORY_MEMORY_INFO_DAT_SYM_INSTALL_DIR SIM_DIR
#define HPS_ARM_A9_1_ONCHIP_MEMORY_MEMORY_INFO_GENERATE_DAT_SYM 1
#define HPS_ARM_A9_1_ONCHIP_MEMORY_MEMORY_INFO_GENERATE_HEX 1
#define HPS_ARM_A9_1_ONCHIP_MEMORY_MEMORY_INFO_HAS_BYTE_LANE 0
#define HPS_ARM_A9_1_ONCHIP_MEMORY_MEMORY_INFO_HEX_INSTALL_DIR QPF_DIR
#define HPS_ARM_A9_1_ONCHIP_MEMORY_MEMORY_INFO_MEM_INIT_DATA_WIDTH 64
#define HPS_ARM_A9_1_ONCHIP_MEMORY_MEMORY_INFO_MEM_INIT_FILENAME soc_system_onchip_memory

/*
 * Macros for device 'Qsys_alu_0', class 'Qsys_alu'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_QSYS_ALU_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_QSYS_ALU_0_COMPONENT_TYPE Qsys_alu
#define HPS_ARM_A9_1_QSYS_ALU_0_COMPONENT_NAME Qsys_alu_0
#define HPS_ARM_A9_1_QSYS_ALU_0_BASE 0xff200000
#define HPS_ARM_A9_1_QSYS_ALU_0_SPAN 32
#define HPS_ARM_A9_1_QSYS_ALU_0_END 0xff20001f

/*
 * Macros for device 'SystemID', class 'altera_avalon_sysid_qsys'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_SYSTEMID_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_SYSTEMID_COMPONENT_TYPE altera_avalon_sysid_qsys
#define HPS_ARM_A9_1_SYSTEMID_COMPONENT_NAME SystemID
#define HPS_ARM_A9_1_SYSTEMID_BASE 0xff200020
#define HPS_ARM_A9_1_SYSTEMID_SPAN 8
#define HPS_ARM_A9_1_SYSTEMID_END 0xff200027
#define HPS_ARM_A9_1_SYSTEMID_ID 2899645186
#define HPS_ARM_A9_1_SYSTEMID_TIMESTAMP 1575579111

/*
 * Macros for device 'jtag_uart', class 'altera_avalon_jtag_uart'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_JTAG_UART_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_JTAG_UART_COMPONENT_TYPE altera_avalon_jtag_uart
#define HPS_ARM_A9_1_JTAG_UART_COMPONENT_NAME jtag_uart
#define HPS_ARM_A9_1_JTAG_UART_BASE 0xff200028
#define HPS_ARM_A9_1_JTAG_UART_SPAN 8
#define HPS_ARM_A9_1_JTAG_UART_END 0xff20002f
#define HPS_ARM_A9_1_JTAG_UART_READ_DEPTH 64
#define HPS_ARM_A9_1_JTAG_UART_READ_THRESHOLD 8
#define HPS_ARM_A9_1_JTAG_UART_WRITE_DEPTH 64
#define HPS_ARM_A9_1_JTAG_UART_WRITE_THRESHOLD 8

/*
 * Macros for device 'hps_gmac0', class 'stmmac'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_GMAC0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_GMAC0_COMPONENT_TYPE stmmac
#define HPS_ARM_A9_1_HPS_GMAC0_COMPONENT_NAME hps_gmac0
#define HPS_ARM_A9_1_HPS_GMAC0_BASE 0xff700000
#define HPS_ARM_A9_1_HPS_GMAC0_SPAN 8192
#define HPS_ARM_A9_1_HPS_GMAC0_END 0xff701fff

/*
 * Macros for device 'hps_gmac1', class 'stmmac'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_GMAC1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_GMAC1_COMPONENT_TYPE stmmac
#define HPS_ARM_A9_1_HPS_GMAC1_COMPONENT_NAME hps_gmac1
#define HPS_ARM_A9_1_HPS_GMAC1_BASE 0xff702000
#define HPS_ARM_A9_1_HPS_GMAC1_SPAN 8192
#define HPS_ARM_A9_1_HPS_GMAC1_END 0xff703fff

/*
 * Macros for device 'hps_sdmmc', class 'sdmmc'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_SDMMC_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_SDMMC_COMPONENT_TYPE sdmmc
#define HPS_ARM_A9_1_HPS_SDMMC_COMPONENT_NAME hps_sdmmc
#define HPS_ARM_A9_1_HPS_SDMMC_BASE 0xff704000
#define HPS_ARM_A9_1_HPS_SDMMC_SPAN 4096
#define HPS_ARM_A9_1_HPS_SDMMC_END 0xff704fff

/*
 * Macros for device 'hps_qspi', class 'cadence_qspi'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_QSPI_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_QSPI_COMPONENT_TYPE cadence_qspi
#define HPS_ARM_A9_1_HPS_QSPI_COMPONENT_NAME hps_qspi
#define HPS_ARM_A9_1_HPS_QSPI_BASE 0xff705000
#define HPS_ARM_A9_1_HPS_QSPI_SPAN 256
#define HPS_ARM_A9_1_HPS_QSPI_END 0xff7050ff

/*
 * Macros for device 'hps_fpgamgr', class 'altera_fpgamgr'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_FPGAMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_FPGAMGR_COMPONENT_TYPE altera_fpgamgr
#define HPS_ARM_A9_1_HPS_FPGAMGR_COMPONENT_NAME hps_fpgamgr
#define HPS_ARM_A9_1_HPS_FPGAMGR_BASE 0xff706000
#define HPS_ARM_A9_1_HPS_FPGAMGR_SPAN 4096
#define HPS_ARM_A9_1_HPS_FPGAMGR_END 0xff706fff

/*
 * Macros for device 'hps_gpio0', class 'dw_gpio'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_GPIO0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_GPIO0_COMPONENT_TYPE dw_gpio
#define HPS_ARM_A9_1_HPS_GPIO0_COMPONENT_NAME hps_gpio0
#define HPS_ARM_A9_1_HPS_GPIO0_BASE 0xff708000
#define HPS_ARM_A9_1_HPS_GPIO0_SPAN 256
#define HPS_ARM_A9_1_HPS_GPIO0_END 0xff7080ff

/*
 * Macros for device 'hps_gpio1', class 'dw_gpio'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_GPIO1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_GPIO1_COMPONENT_TYPE dw_gpio
#define HPS_ARM_A9_1_HPS_GPIO1_COMPONENT_NAME hps_gpio1
#define HPS_ARM_A9_1_HPS_GPIO1_BASE 0xff709000
#define HPS_ARM_A9_1_HPS_GPIO1_SPAN 256
#define HPS_ARM_A9_1_HPS_GPIO1_END 0xff7090ff

/*
 * Macros for device 'hps_gpio2', class 'dw_gpio'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_GPIO2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_GPIO2_COMPONENT_TYPE dw_gpio
#define HPS_ARM_A9_1_HPS_GPIO2_COMPONENT_NAME hps_gpio2
#define HPS_ARM_A9_1_HPS_GPIO2_BASE 0xff70a000
#define HPS_ARM_A9_1_HPS_GPIO2_SPAN 256
#define HPS_ARM_A9_1_HPS_GPIO2_END 0xff70a0ff

/*
 * Macros for device 'hps_l3regs', class 'altera_l3regs'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_L3REGS_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_L3REGS_COMPONENT_TYPE altera_l3regs
#define HPS_ARM_A9_1_HPS_L3REGS_COMPONENT_NAME hps_l3regs
#define HPS_ARM_A9_1_HPS_L3REGS_BASE 0xff800000
#define HPS_ARM_A9_1_HPS_L3REGS_SPAN 4096
#define HPS_ARM_A9_1_HPS_L3REGS_END 0xff800fff

/*
 * Macros for device 'hps_nand0', class 'denali_nand'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_NAND0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_NAND0_COMPONENT_TYPE denali_nand
#define HPS_ARM_A9_1_HPS_NAND0_COMPONENT_NAME hps_nand0
#define HPS_ARM_A9_1_HPS_NAND0_BASE 0xff900000
#define HPS_ARM_A9_1_HPS_NAND0_SPAN 65536
#define HPS_ARM_A9_1_HPS_NAND0_END 0xff90ffff

/*
 * Macros for device 'hps_usb0', class 'usb'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_USB0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_USB0_COMPONENT_TYPE usb
#define HPS_ARM_A9_1_HPS_USB0_COMPONENT_NAME hps_usb0
#define HPS_ARM_A9_1_HPS_USB0_BASE 0xffb00000
#define HPS_ARM_A9_1_HPS_USB0_SPAN 262144
#define HPS_ARM_A9_1_HPS_USB0_END 0xffb3ffff

/*
 * Macros for device 'hps_usb1', class 'usb'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_USB1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_USB1_COMPONENT_TYPE usb
#define HPS_ARM_A9_1_HPS_USB1_COMPONENT_NAME hps_usb1
#define HPS_ARM_A9_1_HPS_USB1_BASE 0xffb40000
#define HPS_ARM_A9_1_HPS_USB1_SPAN 262144
#define HPS_ARM_A9_1_HPS_USB1_END 0xffb7ffff

/*
 * Macros for device 'hps_dcan0', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_DCAN0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_DCAN0_COMPONENT_TYPE bosch_dcan
#define HPS_ARM_A9_1_HPS_DCAN0_COMPONENT_NAME hps_dcan0
#define HPS_ARM_A9_1_HPS_DCAN0_BASE 0xffc00000
#define HPS_ARM_A9_1_HPS_DCAN0_SPAN 4096
#define HPS_ARM_A9_1_HPS_DCAN0_END 0xffc00fff

/*
 * Macros for device 'hps_dcan1', class 'bosch_dcan'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_DCAN1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_DCAN1_COMPONENT_TYPE bosch_dcan
#define HPS_ARM_A9_1_HPS_DCAN1_COMPONENT_NAME hps_dcan1
#define HPS_ARM_A9_1_HPS_DCAN1_BASE 0xffc01000
#define HPS_ARM_A9_1_HPS_DCAN1_SPAN 4096
#define HPS_ARM_A9_1_HPS_DCAN1_END 0xffc01fff

/*
 * Macros for device 'hps_uart0', class 'snps_uart'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_UART0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_UART0_COMPONENT_TYPE snps_uart
#define HPS_ARM_A9_1_HPS_UART0_COMPONENT_NAME hps_uart0
#define HPS_ARM_A9_1_HPS_UART0_BASE 0xffc02000
#define HPS_ARM_A9_1_HPS_UART0_SPAN 256
#define HPS_ARM_A9_1_HPS_UART0_END 0xffc020ff
#define HPS_ARM_A9_1_HPS_UART0_FIFO_DEPTH 128
#define HPS_ARM_A9_1_HPS_UART0_FIFO_HWFC 0
#define HPS_ARM_A9_1_HPS_UART0_FIFO_MODE 1
#define HPS_ARM_A9_1_HPS_UART0_FIFO_SWFC 0
#define HPS_ARM_A9_1_HPS_UART0_FREQ 100000000

/*
 * Macros for device 'hps_uart1', class 'snps_uart'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_UART1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_UART1_COMPONENT_TYPE snps_uart
#define HPS_ARM_A9_1_HPS_UART1_COMPONENT_NAME hps_uart1
#define HPS_ARM_A9_1_HPS_UART1_BASE 0xffc03000
#define HPS_ARM_A9_1_HPS_UART1_SPAN 256
#define HPS_ARM_A9_1_HPS_UART1_END 0xffc030ff
#define HPS_ARM_A9_1_HPS_UART1_FIFO_DEPTH 128
#define HPS_ARM_A9_1_HPS_UART1_FIFO_HWFC 0
#define HPS_ARM_A9_1_HPS_UART1_FIFO_MODE 1
#define HPS_ARM_A9_1_HPS_UART1_FIFO_SWFC 0
#define HPS_ARM_A9_1_HPS_UART1_FREQ 100000000

/*
 * Macros for device 'hps_i2c0', class 'designware_i2c'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_I2C0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_I2C0_COMPONENT_TYPE designware_i2c
#define HPS_ARM_A9_1_HPS_I2C0_COMPONENT_NAME hps_i2c0
#define HPS_ARM_A9_1_HPS_I2C0_BASE 0xffc04000
#define HPS_ARM_A9_1_HPS_I2C0_SPAN 256
#define HPS_ARM_A9_1_HPS_I2C0_END 0xffc040ff

/*
 * Macros for device 'hps_i2c1', class 'designware_i2c'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_I2C1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_I2C1_COMPONENT_TYPE designware_i2c
#define HPS_ARM_A9_1_HPS_I2C1_COMPONENT_NAME hps_i2c1
#define HPS_ARM_A9_1_HPS_I2C1_BASE 0xffc05000
#define HPS_ARM_A9_1_HPS_I2C1_SPAN 256
#define HPS_ARM_A9_1_HPS_I2C1_END 0xffc050ff

/*
 * Macros for device 'hps_i2c2', class 'designware_i2c'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_I2C2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_I2C2_COMPONENT_TYPE designware_i2c
#define HPS_ARM_A9_1_HPS_I2C2_COMPONENT_NAME hps_i2c2
#define HPS_ARM_A9_1_HPS_I2C2_BASE 0xffc06000
#define HPS_ARM_A9_1_HPS_I2C2_SPAN 256
#define HPS_ARM_A9_1_HPS_I2C2_END 0xffc060ff

/*
 * Macros for device 'hps_i2c3', class 'designware_i2c'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_I2C3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_I2C3_COMPONENT_TYPE designware_i2c
#define HPS_ARM_A9_1_HPS_I2C3_COMPONENT_NAME hps_i2c3
#define HPS_ARM_A9_1_HPS_I2C3_BASE 0xffc07000
#define HPS_ARM_A9_1_HPS_I2C3_SPAN 256
#define HPS_ARM_A9_1_HPS_I2C3_END 0xffc070ff

/*
 * Macros for device 'hps_timer0', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_TIMER0_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_ARM_A9_1_HPS_TIMER0_COMPONENT_NAME hps_timer0
#define HPS_ARM_A9_1_HPS_TIMER0_BASE 0xffc08000
#define HPS_ARM_A9_1_HPS_TIMER0_SPAN 256
#define HPS_ARM_A9_1_HPS_TIMER0_END 0xffc080ff

/*
 * Macros for device 'hps_timer1', class 'dw_apb_timer_sp'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_TIMER1_COMPONENT_TYPE dw_apb_timer_sp
#define HPS_ARM_A9_1_HPS_TIMER1_COMPONENT_NAME hps_timer1
#define HPS_ARM_A9_1_HPS_TIMER1_BASE 0xffc09000
#define HPS_ARM_A9_1_HPS_TIMER1_SPAN 256
#define HPS_ARM_A9_1_HPS_TIMER1_END 0xffc090ff

/*
 * Macros for device 'hps_sdrctl', class 'altera_sdrctl'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_SDRCTL_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_SDRCTL_COMPONENT_TYPE altera_sdrctl
#define HPS_ARM_A9_1_HPS_SDRCTL_COMPONENT_NAME hps_sdrctl
#define HPS_ARM_A9_1_HPS_SDRCTL_BASE 0xffc25000
#define HPS_ARM_A9_1_HPS_SDRCTL_SPAN 4096
#define HPS_ARM_A9_1_HPS_SDRCTL_END 0xffc25fff

/*
 * Macros for device 'hps_timer2', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_TIMER2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_TIMER2_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_ARM_A9_1_HPS_TIMER2_COMPONENT_NAME hps_timer2
#define HPS_ARM_A9_1_HPS_TIMER2_BASE 0xffd00000
#define HPS_ARM_A9_1_HPS_TIMER2_SPAN 256
#define HPS_ARM_A9_1_HPS_TIMER2_END 0xffd000ff

/*
 * Macros for device 'hps_timer3', class 'dw_apb_timer_osc'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_TIMER3_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_TIMER3_COMPONENT_TYPE dw_apb_timer_osc
#define HPS_ARM_A9_1_HPS_TIMER3_COMPONENT_NAME hps_timer3
#define HPS_ARM_A9_1_HPS_TIMER3_BASE 0xffd01000
#define HPS_ARM_A9_1_HPS_TIMER3_SPAN 256
#define HPS_ARM_A9_1_HPS_TIMER3_END 0xffd010ff

/*
 * Macros for device 'hps_wd_timer0', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_WD_TIMER0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_WD_TIMER0_COMPONENT_TYPE dw_wd_timer
#define HPS_ARM_A9_1_HPS_WD_TIMER0_COMPONENT_NAME hps_wd_timer0
#define HPS_ARM_A9_1_HPS_WD_TIMER0_BASE 0xffd02000
#define HPS_ARM_A9_1_HPS_WD_TIMER0_SPAN 256
#define HPS_ARM_A9_1_HPS_WD_TIMER0_END 0xffd020ff

/*
 * Macros for device 'hps_wd_timer1', class 'dw_wd_timer'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_WD_TIMER1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_WD_TIMER1_COMPONENT_TYPE dw_wd_timer
#define HPS_ARM_A9_1_HPS_WD_TIMER1_COMPONENT_NAME hps_wd_timer1
#define HPS_ARM_A9_1_HPS_WD_TIMER1_BASE 0xffd03000
#define HPS_ARM_A9_1_HPS_WD_TIMER1_SPAN 256
#define HPS_ARM_A9_1_HPS_WD_TIMER1_END 0xffd030ff

/*
 * Macros for device 'hps_clkmgr', class 'asimov_clkmgr'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_CLKMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_CLKMGR_COMPONENT_TYPE asimov_clkmgr
#define HPS_ARM_A9_1_HPS_CLKMGR_COMPONENT_NAME hps_clkmgr
#define HPS_ARM_A9_1_HPS_CLKMGR_BASE 0xffd04000
#define HPS_ARM_A9_1_HPS_CLKMGR_SPAN 4096
#define HPS_ARM_A9_1_HPS_CLKMGR_END 0xffd04fff

/*
 * Macros for device 'hps_rstmgr', class 'altera_rstmgr'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_RSTMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_RSTMGR_COMPONENT_TYPE altera_rstmgr
#define HPS_ARM_A9_1_HPS_RSTMGR_COMPONENT_NAME hps_rstmgr
#define HPS_ARM_A9_1_HPS_RSTMGR_BASE 0xffd05000
#define HPS_ARM_A9_1_HPS_RSTMGR_SPAN 256
#define HPS_ARM_A9_1_HPS_RSTMGR_END 0xffd050ff

/*
 * Macros for device 'hps_sysmgr', class 'altera_sysmgr'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_SYSMGR_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_SYSMGR_COMPONENT_TYPE altera_sysmgr
#define HPS_ARM_A9_1_HPS_SYSMGR_COMPONENT_NAME hps_sysmgr
#define HPS_ARM_A9_1_HPS_SYSMGR_BASE 0xffd08000
#define HPS_ARM_A9_1_HPS_SYSMGR_SPAN 1024
#define HPS_ARM_A9_1_HPS_SYSMGR_END 0xffd083ff

/*
 * Macros for device 'hps_dma', class 'arm_pl330_dma'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_DMA_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_DMA_COMPONENT_TYPE arm_pl330_dma
#define HPS_ARM_A9_1_HPS_DMA_COMPONENT_NAME hps_dma
#define HPS_ARM_A9_1_HPS_DMA_BASE 0xffe01000
#define HPS_ARM_A9_1_HPS_DMA_SPAN 4096
#define HPS_ARM_A9_1_HPS_DMA_END 0xffe01fff

/*
 * Macros for device 'hps_spim0', class 'spi'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_SPIM0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_SPIM0_COMPONENT_TYPE spi
#define HPS_ARM_A9_1_HPS_SPIM0_COMPONENT_NAME hps_spim0
#define HPS_ARM_A9_1_HPS_SPIM0_BASE 0xfff00000
#define HPS_ARM_A9_1_HPS_SPIM0_SPAN 256
#define HPS_ARM_A9_1_HPS_SPIM0_END 0xfff000ff

/*
 * Macros for device 'hps_spim1', class 'spi'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_SPIM1_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_SPIM1_COMPONENT_TYPE spi
#define HPS_ARM_A9_1_HPS_SPIM1_COMPONENT_NAME hps_spim1
#define HPS_ARM_A9_1_HPS_SPIM1_BASE 0xfff01000
#define HPS_ARM_A9_1_HPS_SPIM1_SPAN 256
#define HPS_ARM_A9_1_HPS_SPIM1_END 0xfff010ff

/*
 * Macros for device 'hps_scu', class 'scu'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_SCU_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_SCU_COMPONENT_TYPE scu
#define HPS_ARM_A9_1_HPS_SCU_COMPONENT_NAME hps_scu
#define HPS_ARM_A9_1_HPS_SCU_BASE 0xfffec000
#define HPS_ARM_A9_1_HPS_SCU_SPAN 256
#define HPS_ARM_A9_1_HPS_SCU_END 0xfffec0ff

/*
 * Macros for device 'hps_timer', class 'arm_internal_timer'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_TIMER_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_TIMER_COMPONENT_TYPE arm_internal_timer
#define HPS_ARM_A9_1_HPS_TIMER_COMPONENT_NAME hps_timer
#define HPS_ARM_A9_1_HPS_TIMER_BASE 0xfffec600
#define HPS_ARM_A9_1_HPS_TIMER_SPAN 256
#define HPS_ARM_A9_1_HPS_TIMER_END 0xfffec6ff

/*
 * Macros for device 'hps_arm_gic_0', class 'arm_gic'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_ARM_GIC_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_ARM_GIC_0_COMPONENT_TYPE arm_gic
#define HPS_ARM_A9_1_HPS_ARM_GIC_0_COMPONENT_NAME hps_arm_gic_0
#define HPS_ARM_A9_1_HPS_ARM_GIC_0_BASE 0xfffed000
#define HPS_ARM_A9_1_HPS_ARM_GIC_0_SPAN 4096
#define HPS_ARM_A9_1_HPS_ARM_GIC_0_END 0xfffedfff

/*
 * Macros for device 'hps_L2', class 'arm_pl310_L2'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_L2_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_L2_COMPONENT_TYPE arm_pl310_L2
#define HPS_ARM_A9_1_HPS_L2_COMPONENT_NAME hps_L2
#define HPS_ARM_A9_1_HPS_L2_BASE 0xfffef000
#define HPS_ARM_A9_1_HPS_L2_SPAN 4096
#define HPS_ARM_A9_1_HPS_L2_END 0xfffeffff

/*
 * Macros for device 'hps_axi_ocram', class 'axi_ocram'
 * Path to the device is from the master group 'hps_arm_a9_1'.
 * The macros are prefixed with 'HPS_ARM_A9_1_HPS_AXI_OCRAM_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define HPS_ARM_A9_1_HPS_AXI_OCRAM_COMPONENT_TYPE axi_ocram
#define HPS_ARM_A9_1_HPS_AXI_OCRAM_COMPONENT_NAME hps_axi_ocram
#define HPS_ARM_A9_1_HPS_AXI_OCRAM_BASE 0xffff0000
#define HPS_ARM_A9_1_HPS_AXI_OCRAM_SPAN 65536
#define HPS_ARM_A9_1_HPS_AXI_OCRAM_END 0xffffffff
#define HPS_ARM_A9_1_HPS_AXI_OCRAM_SIZE_MULTIPLE 1
#define HPS_ARM_A9_1_HPS_AXI_OCRAM_SIZE_VALUE 1<<16
#define HPS_ARM_A9_1_HPS_AXI_OCRAM_WRITABLE 1
#define HPS_ARM_A9_1_HPS_AXI_OCRAM_MEMORY_INFO_GENERATE_DAT_SYM 0
#define HPS_ARM_A9_1_HPS_AXI_OCRAM_MEMORY_INFO_GENERATE_HEX 0
#define HPS_ARM_A9_1_HPS_AXI_OCRAM_MEMORY_INFO_MEM_INIT_DATA_WIDTH 16

/*
 * Macros for device 'Qsys_alu_0', class 'Qsys_alu'
 * Path to the device is from the master group 'jtag_mm1'.
 * The macros are prefixed with 'JTAG_MM1_QSYS_ALU_0_'.
 * The prefix is the master group descriptor and the slave descriptor.
 */
#define JTAG_MM1_QSYS_ALU_0_COMPONENT_TYPE Qsys_alu
#define JTAG_MM1_QSYS_ALU_0_COMPONENT_NAME Qsys_alu_0
#define JTAG_MM1_QSYS_ALU_0_BASE 0x0
#define JTAG_MM1_QSYS_ALU_0_SPAN 32
#define JTAG_MM1_QSYS_ALU_0_END 0x1f


#endif /* _ALTERA_SOC_SYSTEM_H_ */
